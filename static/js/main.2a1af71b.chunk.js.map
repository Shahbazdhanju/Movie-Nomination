{"version":3,"sources":["hoc/Auxiliary.js","components/NominationList/NominationList.js","components/DisplayPannel/DisplayPannel.js","components/SearchBar/SearchBar.js","components/SearchButton/SearchButton.js","container/Search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["aux","props","children","NominationList","className","count","nominationList","DisplayPannel","useState","setCount","movieList","setMovieList","disabledIds","setDisabledIds","listOfResult","results","map","r","i","Title","Year","id","imdbID","disabled","includes","onClick","nominationHandler","title","year","bool","alert","Key","e","splice","document","getElementById","index","indexOf","removeNominationHandler","typed","SearchBar","type","placeholder","SearchButton","Search","handleSubmit","event","preventDefault","console","log","state","movieName","length","getInfo","setState","query","handleInputChange","target","name","value","axios","get","process","then","data","Response","this","onSubmit","onChange","Component","App","style","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2a1af71b.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React, { useState } from \"react\";\r\nimport \"./NominationList.css\";\r\n\r\nconst NominationList = (props) => {\r\n  return (\r\n    <aside className=\"right\">\r\n      <h1 className=\"ntext\">Number of Nominations: {props.count}</h1>\r\n      <h3 className=\"nList\">Nomination list: {props.nominationList}</h3>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default NominationList;\r\n","import React, { useState } from \"react\";\r\nimport NominationList from \"../NominationList/NominationList\";\r\nimport \"./DisplayPannel.css\";\r\n\r\nconst DisplayPannel = (props) => {\r\n  const [count, setCount] = useState(0);\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [resultList, setResultList] = useState([]);\r\n  const [disabledIds, setDisabledIds] = useState([]);\r\n\r\n  const removeNominationHandler = (i, id) => {\r\n    setCount(count - 1);\r\n    movieList.splice(i, 1);\r\n    var elementExists = document.getElementById(id);\r\n    const index = disabledIds.indexOf(id);\r\n    if (index > -1) {\r\n      disabledIds.splice(index, 1);\r\n    }\r\n  };\r\n\r\n  const listOfResult = props.results.map((r, i) => (\r\n    <p className=\"resultList\" key={i}>\r\n      <span className=\"tspan\">Title : {r.Title}</span>\r\n      <span>Year released : {r.Year}</span>\r\n      <button\r\n        id={r.imdbID}\r\n        className=\"addButton\"\r\n        disabled={disabledIds.includes(r.imdbID)}\r\n        onClick={() => nominationHandler(r.Title, r.Year, r.imdbID, i)}\r\n      >\r\n        Nominate\r\n      </button>\r\n    </p>\r\n  ));\r\n\r\n  const nominationHandler = (title, year, id, bool, i) => {\r\n    if (count === 5) {\r\n      alert(\"You have reached the limit of 5.\");\r\n    } else {\r\n      setCount(count + 1);\r\n      setMovieList([\r\n        ...movieList,\r\n        {\r\n          Title: title,\r\n          Year: year,\r\n          Key: id,\r\n        },\r\n      ]);\r\n      setDisabledIds([...disabledIds, id]);\r\n    }\r\n  };\r\n\r\n  const nominationList = movieList.map((r, i) => (\r\n    <p key={i}>\r\n      <span className=\"tspan\"> Title : {r.Title}</span>\r\n      <span>\r\n        Year released : {r.Year}\r\n      </span>\r\n      <button\r\n        className=\"removeButton\"\r\n        onClick={(e) => removeNominationHandler(i, r.Key)}\r\n      >\r\n        Remove\r\n      </button>\r\n    </p>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"DisplayPannel\">\r\n      <h1>\r\n        <section className=\"sectionLeft\">\r\n          <strong>Searched results for: {props.typed}</strong>\r\n          <ul>{listOfResult}</ul>\r\n        </section>\r\n      </h1>\r\n      <NominationList count={count} nominationList={nominationList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayPannel;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = (props) => (\r\n  <input\r\n    {...props}\r\n    className=\"SearchBar\"\r\n    type=\"text\"\r\n    placeholder=\"Enter movie here..\"\r\n  />\r\n);\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./SearchButton.css\";\r\n\r\nconst SearchButton = (props) => (\r\n  <button className=\"SearchButton\">\r\n    Search\r\n  </button>\r\n);\r\n\r\nexport default SearchButton;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport DisplayPannel from \"../../components/DisplayPannel/DisplayPannel\";\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\r\nimport SearchButton from \"../../components/SearchButton/SearchButton\";\r\nimport \"./Search.css\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movieName: \"\",\r\n      query: \"\",\r\n      results: [],\r\n    };\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"here is the submit\", this.state.movieName);\r\n    if (this.state.movieName.length > 1) {\r\n      this.getInfo();\r\n      this.setState({\r\n        query: this.state.movieName,\r\n      });\r\n    }\r\n    console.log(\"here is th quer::\", this.state.query);\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Input change : \", event.target.name);\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  getInfo = () => {\r\n    axios.get(`${API_URL}&s=${this.state.movieName}`).then(({ data }) => {\r\n      if (data.Response === \"True\") {\r\n        this.setState({\r\n          results: data.Search,\r\n        });\r\n      } else {\r\n        alert(\"Please enter the movie name again!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { movieName } = this.state;\r\n\r\n    return (\r\n      <div className=\"Search\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <SearchBar name=\"movieName\" onChange={this.handleInputChange} />\r\n          <SearchButton />\r\n        </form>\r\n        <DisplayPannel typed={movieName} results={this.state.results} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import \"./App.css\";\r\nimport Aux from \"./hoc/Auxiliary\";\r\nimport Search from \"./container/Search/Search\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Aux>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>Your movie nomination list!</h1>\r\n        </header>\r\n        <main style={{backgroundColor:\"lightblue\"}}>\r\n        <Search/>\r\n        </main>\r\n      </div>\r\n    </Aux>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}