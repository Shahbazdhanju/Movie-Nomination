{"version":3,"sources":["hoc/Auxiliary.js","components/DisplayPannel/DisplayPannel.js","components/SearchBar/SearchBar.js","components/SearchButton/SearchButton.js","container/Search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["aux","props","children","DisplayPannel","useState","count","setCount","movieList","setMovieList","listOfResult","results","map","r","className","Title","Year","onClick","e","t","y","console","log","alert","imdbID","nominationList","i","splice","removeNominationHandler","typed","SearchBar","type","size","placeholder","SearchButton","Search","handleSubmit","event","preventDefault","state","movieName","length","getInfo","setState","query","handleInputChange","target","name","value","axios","get","then","data","Response","this","onSubmit","onChange","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAEeA,G,YAFH,SAACC,GAAD,OAAWA,EAAMC,W,uEC+EdC,G,MA5EO,SAACF,GAAW,IAAD,EACLG,mBAAS,GADJ,mBACxBC,EADwB,KACjBC,EADiB,OAEGF,mBAAS,IAFZ,mBAExBG,EAFwB,KAEbC,EAFa,OAGEJ,mBAAS,IAHX,mBA+BzBK,GA/ByB,UA+BVR,EAAMS,QAAQC,KAAI,SAACC,GAAD,OACnC,0BAASC,UAAU,aAAnB,qBACWD,EAAEE,MADb,kBAEkBF,EAAEG,KAClB,wBAAQF,UAAU,YAChBG,QAAS,SAACC,GAAD,OA/BUC,EA+BaN,EAAEE,MA/BbK,EA+BmBP,EAAEG,KA9BhDK,QAAQC,IAAI,oBAAoBH,QACnB,IAAVb,EACDiB,MAAM,qCAENhB,EAASD,EAAQ,GACjBG,EAAa,GAAD,mBACPD,GADO,CAEV,CACEO,MAAOI,EACPH,KAAMI,QAVY,IAACD,EAAEC,GA8BvB,mBAHmCP,EAAEW,YAWrCC,EAAiBjB,EAAUI,KAAI,SAACC,EAAEa,GAAH,OACnC,0BAASZ,UAAU,UAAnB,qBACWD,EAAEE,MADb,kBAEkBF,EAAEG,KAClB,wBAAQF,UAAU,YACdG,QAAS,SAACC,GAAD,OA3Be,SAACQ,GAClB,IAAVpB,EACDiB,MAAM,sBAENhB,EAASD,EAAQ,GAEjBE,EAAUmB,OAAOD,EAAE,GAqBDE,CAAwBF,IAD1C,sBAHiCA,MAWrC,OACE,sBAAKZ,UAAU,gBAAf,UACE,6BACE,0BAASA,UAAU,cAAnB,UACE,4DAA+BZ,EAAM2B,SACrC,6BAAKnB,SAIT,uBAAOI,UAAU,QAAjB,SACE,6BACE,6DAC0BR,EAD1B,oBAEoBmB,c,OC1DfK,G,MAVG,SAAC5B,GAAD,OAChB,iDACMA,GADN,IAEEY,UAAU,YACViB,KAAK,OACLC,KAAK,MACLC,YAAY,0BCADC,G,MANM,SAAChC,GAAD,OACnB,wBAAQY,UAAU,eAAlB,sBCgEaqB,E,kDA1Db,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAQRkC,aAAe,SAACC,GACdA,EAAMC,iBACNjB,QAAQC,IAAI,qBAAsB,EAAKiB,MAAMC,WACzC,EAAKD,MAAMC,UAAUC,OAAS,IAChC,EAAKC,UACL,EAAKC,SAAS,CACZC,MAAO,EAAKL,MAAMC,aAGtBnB,QAAQC,IAAI,oBAAqB,EAAKiB,MAAMK,QAlB3B,EAqBnBC,kBAAoB,SAACR,GACnBA,EAAMC,iBACNjB,QAAQC,IAAI,kBAAmBe,EAAMS,OAAOC,MAC5C,EAAKJ,SAAL,eACGN,EAAMS,OAAOC,KAAOV,EAAMS,OAAOE,SAzBnB,EA6BnBN,QAAU,WACRO,IAAMC,IAAN,UAjCY,uDAiCZ,cAA0B,EAAKX,MAAMC,YAAaW,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACxD/B,QAAQC,IAAI,iBAAkB8B,GAC9B/B,QAAQC,IAAI,sBAAuB8B,EAAKC,UAClB,SAAlBD,EAAKC,SACP,EAAKV,SAAS,CACZhC,QAASyC,EAAKjB,SAGhBZ,MAAM,0CApCV,EAAKgB,MAAQ,CACXC,UAAW,GACXI,MAAO,GACPjC,QAAS,IALM,E,qDA2CT,IACA6B,EAAcc,KAAKf,MAAnBC,UAER,OACE,gCACE,uBAAMe,SAAUD,KAAKlB,aAArB,UACE,cAAC,EAAD,CAAWW,KAAK,YAAYS,SAAUF,KAAKT,oBAC3C,cAAC,EAAD,OAEF,cAAC,EAAD,CAAehB,MAAOW,EAAW7B,QAAS2C,KAAKf,MAAM5B,iB,GArDxC8C,aCSNC,MAbf,WACE,OACE,cAAC,EAAD,UACE,sBAAK5C,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,+DAGF,cAAC,EAAD,UCDO6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ea2806b5.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React, { useState } from \"react\";\r\nimport \"./DisplayPannel.css\";\r\n\r\nconst DisplayPannel = (props) => {\r\n  const [count, setCount] = useState(0);\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [moviename,setmoviename] = useState(\"\");\r\n\r\n  const nominationHandler = (t,y) => {\r\n    console.log(\"inside nomination\",t)\r\n    if(count === 5){\r\n      alert(\"You have reached the limit of 5.\");\r\n    }else{\r\n      setCount(count + 1);\r\n      setMovieList([\r\n        ...movieList,\r\n        {\r\n          Title: t,\r\n          Year: y\r\n        }\r\n      ])\r\n    }\r\n  };\r\n\r\n  const removeNominationHandler = (i) => {\r\n    if(count === 0){\r\n      alert(\"Nothing to remove!\")\r\n    }else{\r\n      setCount(count - 1);\r\n    }\r\n      movieList.splice(i,1);\r\n  };\r\n\r\n\r\n  const listOfResult = props.results.map((r) => (\r\n      <section className=\"resultList\" key={r.imdbID}>\r\n        Title : {r.Title}\r\n        Year released: {r.Year}\r\n        <button className=\"addButton\"\r\n          onClick={(e)=>nominationHandler(r.Title,r.Year)}>\r\n          Add\r\n        </button>\r\n      </section>\r\n  ));\r\n\r\n  \r\n  const nominationList = movieList.map((r,i) => (\r\n    <section className=\"nomList\" key ={i}>\r\n      Title : {r.Title}\r\n      Year released: {r.Year}\r\n      <button className=\"addButton\"\r\n          onClick={(e)=>removeNominationHandler(i)}>\r\n          Remove\r\n        </button>\r\n    </section>\r\n));\r\n\r\n\r\n  return (\r\n    <div className=\"DisplayPannel\">\r\n      <h1>\r\n        <section className=\"sectionLeft\">\r\n          <strong>Searched results for: {props.typed}</strong>\r\n          <ul>{listOfResult}</ul>\r\n        </section>\r\n      </h1>\r\n\r\n      <aside className=\"right\">\r\n        <h1>\r\n          <strong>\r\n            Number of Nominations: {count}\r\n            Nomination list: {nominationList}\r\n          </strong>\r\n        </h1>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayPannel;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = (props) => (\r\n  <input\r\n    {...props}\r\n    className=\"SearchBar\"\r\n    type=\"text\"\r\n    size=\"100\"\r\n    placeholder=\"Enter movie here..\"\r\n  />\r\n);\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./SearchButton.css\";\r\n\r\nconst SearchButton = (props) => (\r\n  <button className=\"SearchButton\">\r\n    Search\r\n  </button>\r\n);\r\n\r\nexport default SearchButton;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport DisplayPannel from \"../../components/DisplayPannel/DisplayPannel\";\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\r\nimport SearchButton from \"../../components/SearchButton/SearchButton\";\r\n\r\n//const { API_KEY } = process.env\r\nconst API_URL = \"https://www.omdbapi.com/?i=tt3896198&apikey=cba1d777\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movieName: \"\",\r\n      query: \"\",\r\n      results: [],\r\n    };\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"here is the submit\", this.state.movieName);\r\n    if (this.state.movieName.length > 1) {\r\n      this.getInfo();\r\n      this.setState({\r\n        query: this.state.movieName,\r\n      });\r\n    }\r\n    console.log(\"here is th quer::\", this.state.query);\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Input change : \", event.target.name);\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  getInfo = () => {\r\n    axios.get(`${API_URL}&s=${this.state.movieName}`).then(({ data }) => {\r\n      console.log(\"here is data::\", data);\r\n      console.log(\"here is data.data::\", data.Response);\r\n      if (data.Response === \"True\") {\r\n        this.setState({\r\n          results: data.Search,\r\n        });\r\n      } else {\r\n        alert(\"Please enter the movie name again!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { movieName } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <SearchBar name=\"movieName\" onChange={this.handleInputChange} />\r\n          <SearchButton />\r\n        </form>\r\n        <DisplayPannel typed={movieName} results={this.state.results} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import \"./App.css\";\r\n// import Layout from \"./components/Layout/Layout\";\r\nimport Aux from \"./hoc/Auxiliary\";\r\nimport Search from \"./container/Search/Search\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Aux>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>Your movie nomination list!</h1>\r\n        </header>\r\n        {/* <Layout /> */}\r\n        <Search />\r\n      </div>\r\n    </Aux>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}