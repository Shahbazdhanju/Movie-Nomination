{"version":3,"sources":["hoc/Auxiliary.js","components/DisplayPannel/DisplayPannel.js","components/SearchBar/SearchBar.js","components/SearchButton/SearchButton.js","container/Search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["aux","props","children","DisplayPannel","useState","count","setCount","nominationHandler","options","results","map","r","className","Title","Year","onClick","id","typed","style","textAlign","SearchBar","type","size","placeholder","SearchButton","Search","handleSubmit","event","preventDefault","console","log","state","movieName","length","getInfo","setState","query","handleInputChange","target","name","value","axios","get","then","data","Response","alert","this","onSubmit","onChange","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAEeA,G,YAFH,SAACC,GAAD,OAAWA,EAAMC,W,+DCsCdC,G,MAnCO,SAACF,GAAW,IAAD,EACLG,mBAAS,GADJ,mBACxBC,EADwB,KACjBC,EADiB,OAEGF,mBAAS,IAFZ,mBAIzBG,GAJyB,UAIL,WACxBD,EAASD,EAAQ,KASbG,EAAUP,EAAMQ,QAAQC,KAAI,SAACC,GAAD,OAChC,0BAASC,UAAU,aAAnB,qBACWD,EAAEE,MADb,kBAEkBF,EAAEG,KAClB,wBAAQC,QAASR,EAAjB,mBAHmCI,EAAEK,OAQzC,OACE,sBAAKJ,UAAU,gBAAf,UACE,4DAA+BX,EAAMgB,SACrC,yBAAQC,MAAO,CAAEC,UAAW,SAA5B,oCAC0Bd,KAG1B,6BAAKG,S,OCpBIY,G,MAVG,SAACnB,GAAD,OAChB,iDACMA,GADN,IAEEW,UAAU,YACVS,KAAK,OACLC,KAAK,MACLC,YAAY,0BCADC,G,MANM,SAACvB,GAAD,OACnB,wBAAQW,UAAU,eAAlB,sBCiEaa,E,kDA3Db,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IAQRyB,aAAe,SAACC,GACdA,EAAMC,iBACNC,QAAQC,IAAI,qBAAsB,EAAKC,MAAMC,WACzC,EAAKD,MAAMC,UAAUC,OAAS,IAChC,EAAKC,UACL,EAAKC,SAAS,CACZC,MAAO,EAAKL,MAAMC,aAGtBH,QAAQC,IAAI,oBAAqB,EAAKC,MAAMK,QAlB3B,EAqBnBC,kBAAoB,SAACV,GACnBA,EAAMC,iBACNC,QAAQC,IAAI,kBAAmBH,EAAMW,OAAOC,MAC5C,EAAKJ,SAAL,eACGR,EAAMW,OAAOC,KAAOZ,EAAMW,OAAOE,SAzBnB,EA6BnBN,QAAU,WACRO,IAAMC,IAAN,UAjCY,sDAiCZ,cAA0B,EAAKX,MAAMC,YAAaW,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACxDf,QAAQC,IAAI,iBAAkBc,GAC9Bf,QAAQC,IAAI,sBAAuBc,EAAKC,UAClB,SAAlBD,EAAKC,SACP,EAAKV,SAAS,CACZ1B,QAASmC,EAAKnB,SAGhBqB,MAAM,0CApCV,EAAKf,MAAQ,CACXC,UAAW,GACXI,MAAO,GACP3B,QAAS,IALM,E,qDA2CT,IACAuB,EAAce,KAAKhB,MAAnBC,UAER,OACE,gCACE,sDAAyBA,KACzB,uBAAMgB,SAAUD,KAAKrB,aAArB,UACE,cAAC,EAAD,CAAWa,KAAK,YAAYU,SAAUF,KAAKV,oBAC3C,cAAC,EAAD,OAEF,cAAC,EAAD,CAAepB,MAAOe,EAAWvB,QAASsC,KAAKhB,MAAMtB,iB,GAtDxCyC,aCSNC,MAbf,WACE,OACE,cAAC,EAAD,UACE,sBAAKvC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,+DAGF,cAAC,EAAD,UCDOwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d849f9f1.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React, { useState } from \"react\";\r\nimport \"./DisplayPannel.css\";\r\n\r\nconst DisplayPannel = (props) => {\r\n  const [count, setCount] = useState(0);\r\n  const [movieList, setMovieList] = useState([]);\r\n\r\n  const nominationHandler = () => {\r\n    setCount(count + 1);\r\n  };\r\n  // setMovieList([\r\n  //   ...movieList,\r\n  //   {\r\n  //     Title: t,\r\n  //     Year: y\r\n  //   }\r\n  // ])\r\n  const options = props.results.map((r) => (\r\n    <section className=\"resultList\" key={r.id}>\r\n      Title : {r.Title}\r\n      Year released: {r.Year}\r\n      <button onClick={nominationHandler}>Add</button>\r\n    </section>\r\n\r\n  ));\r\n\r\n  return (\r\n    <div className=\"DisplayPannel\">\r\n      <strong>Searched results for: {props.typed}</strong>\r\n      <strong style={{ textAlign: \"right\" }}>\r\n        Number of Nominations: {count}\r\n        {/* Nomination list: {movieList} */}\r\n      </strong>\r\n      <ul>{options}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayPannel;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = (props) => (\r\n  <input\r\n    {...props}\r\n    className=\"SearchBar\"\r\n    type=\"text\"\r\n    size=\"100\"\r\n    placeholder=\"Enter movie here..\"\r\n  />\r\n);\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./SearchButton.css\";\r\n\r\nconst SearchButton = (props) => (\r\n  <button className=\"SearchButton\">\r\n    Search\r\n  </button>\r\n);\r\n\r\nexport default SearchButton;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport DisplayPannel from \"../../components/DisplayPannel/DisplayPannel\";\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\r\nimport SearchButton from \"../../components/SearchButton/SearchButton\";\r\n\r\n//const { API_KEY } = process.env\r\nconst API_URL = \"http://www.omdbapi.com/?i=tt3896198&apikey=cba1d777\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movieName: \"\",\r\n      query: \"\",\r\n      results: [],\r\n    };\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"here is the submit\", this.state.movieName);\r\n    if (this.state.movieName.length > 1) {\r\n      this.getInfo();\r\n      this.setState({\r\n        query: this.state.movieName,\r\n      });\r\n    }\r\n    console.log(\"here is th quer::\", this.state.query);\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Input change : \", event.target.name);\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  getInfo = () => {\r\n    axios.get(`${API_URL}&s=${this.state.movieName}`).then(({ data }) => {\r\n      console.log(\"here is data::\", data);\r\n      console.log(\"here is data.data::\", data.Response);\r\n      if (data.Response === \"True\") {\r\n        this.setState({\r\n          results: data.Search,\r\n        });\r\n      } else {\r\n        alert(\"Please enter the movie name again!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { movieName } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <strong>Movie name is : {movieName}</strong>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <SearchBar name=\"movieName\" onChange={this.handleInputChange} />\r\n          <SearchButton />\r\n        </form>\r\n        <DisplayPannel typed={movieName} results={this.state.results} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import \"./App.css\";\r\n// import Layout from \"./components/Layout/Layout\";\r\nimport Aux from \"./hoc/Auxiliary\";\r\nimport Search from \"./container/Search/Search\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Aux>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>Your movie nomination list!</h1>\r\n        </header>\r\n        {/* <Layout /> */}\r\n        <Search />\r\n      </div>\r\n    </Aux>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}