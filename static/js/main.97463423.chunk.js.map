{"version":3,"sources":["hoc/Auxiliary.js","components/NominationList/NominationList.js","components/DisplayPannel/DisplayPannel.js","components/SearchBar/SearchBar.js","components/SearchButton/SearchButton.js","container/Search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["aux","props","children","NominationList","className","count","nominationList","DisplayPannel","useState","setCount","movieList","setMovieList","listOfResult","results","map","r","Title","Year","onClick","e","title","year","id","imdbID","alert","Key","i","splice","removeNominationHandler","typed","SearchBar","type","size","placeholder","SearchButton","Search","handleSubmit","event","preventDefault","console","log","state","movieName","length","getInfo","setState","query","handleInputChange","target","name","value","axios","get","process","then","data","Response","this","onSubmit","onChange","Component","App","style","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97463423.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React, { useState } from \"react\";\r\nimport \"./NominationList.css\";\r\n\r\nconst NominationList = (props) => {\r\n  return (\r\n    <aside className=\"right\">\r\n      <h1 className=\"ntext\">Number of Nominations: {props.count}</h1>\r\n      <h3 className=\"nList\">Nomination list: {props.nominationList}</h3>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default NominationList;\r\n","import React, { useState } from \"react\";\r\nimport NominationList from \"../NominationList/NominationList\";\r\nimport \"./DisplayPannel.css\";\r\n\r\nconst DisplayPannel = (props) => {\r\n  const [count, setCount] = useState(0);\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [moviename, setmoviename] = useState(\"\");\r\n\r\n  const nominationHandler = (title, year, id) => {\r\n    if (count === 5) {\r\n      alert(\"You have reached the limit of 5.\");\r\n    } else {\r\n      setCount(count + 1);\r\n      setMovieList([\r\n        ...movieList,\r\n        {\r\n          Title: title,\r\n          Year: year,\r\n          Key: id,\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const removeNominationHandler = (i) => {\r\n    if (count === 0) {\r\n      alert(\"Nothing to remove!\");\r\n    } else {\r\n      setCount(count - 1);\r\n    }\r\n    movieList.splice(i, 1);\r\n  };\r\n\r\n  const movieExists = (id) => {\r\n     console.log(\"here is the id\", id, movieList);\r\n    // let obj;\r\n    // if (id) {\r\n    //   for (obj in movieList) {\r\n    //     if (obj.Key === id) return false;\r\n    //   }\r\n    // }\r\n    return true;\r\n  };\r\n\r\n  const listOfResult = props.results.map((r) => (\r\n    <p className=\"resultList\" key={r.imdbID}>\r\n      <span className=\"tspan\">Title : {r.Title}</span>\r\n      <span>Year released : {r.Year}</span>\r\n      <button\r\n        className=\"addButton\"\r\n        // disabled={(e)=> movieExists(r.imdbID)}\r\n        onClick={(e) => nominationHandler(r.Title, r.Year, r.imdbID)}\r\n      >\r\n        Add\r\n      </button>\r\n    </p>\r\n  ));\r\n\r\n  const nominationList = movieList.map((r, i) => (\r\n    <p key={i}>\r\n      <span className=\"tspan\"> Title : {r.Title}</span>\r\n      <span>Year released : {r.Year}</span>\r\n      <button\r\n        className=\"removeButton\"\r\n        onClick={(e) => removeNominationHandler(i)}\r\n      >\r\n        Remove\r\n      </button>\r\n    </p>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"DisplayPannel\">\r\n      <h1>\r\n        <section className=\"sectionLeft\">\r\n          <strong>Searched results for: {props.typed}</strong>\r\n          <ul>{listOfResult}</ul>\r\n        </section>\r\n      </h1>\r\n      <NominationList count={count} nominationList={nominationList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayPannel;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = (props) => (\r\n  <input\r\n    {...props}\r\n    className=\"SearchBar\"\r\n    type=\"text\"\r\n    size=\"100\"\r\n    placeholder=\"Enter movie here..\"\r\n  />\r\n);\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./SearchButton.css\";\r\n\r\nconst SearchButton = (props) => (\r\n  <button className=\"SearchButton\">\r\n    Search\r\n  </button>\r\n);\r\n\r\nexport default SearchButton;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport DisplayPannel from \"../../components/DisplayPannel/DisplayPannel\";\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\r\nimport SearchButton from \"../../components/SearchButton/SearchButton\";\r\nimport './Search.css';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movieName: \"\",\r\n      query: \"\",\r\n      results: [],\r\n    };\r\n  }\r\n  \r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"here is the submit\", this.state.movieName);\r\n    if (this.state.movieName.length > 1) {\r\n      this.getInfo();\r\n      this.setState({\r\n        query: this.state.movieName,\r\n      });\r\n    }\r\n    console.log(\"here is th quer::\", this.state.query);\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Input change : \", event.target.name);\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  getInfo = () => {\r\n    axios.get(`${API_URL}&s=${this.state.movieName}`).then(({ data }) => {\r\n      if (data.Response === \"True\") {\r\n        this.setState({\r\n          results: data.Search,\r\n        });\r\n      } else {\r\n        alert(\"Please enter the movie name again!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { movieName } = this.state;\r\n\r\n    return (\r\n      <div className=\"Search\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <SearchBar name=\"movieName\" onChange={this.handleInputChange} />\r\n          <SearchButton />\r\n        </form>\r\n        <DisplayPannel typed={movieName} results={this.state.results} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import \"./App.css\";\r\nimport Aux from \"./hoc/Auxiliary\";\r\nimport Search from \"./container/Search/Search\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Aux>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>Your movie nomination list!</h1>\r\n        </header>\r\n        <main style={{backgroundColor:\"lightblue\"}}>\r\n        <Search/>\r\n        </main>\r\n      </div>\r\n    </Aux>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}